<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
</head>

<body>

  <% include ../partials/nav.ejs %>
<!--
<div class="form-group mobile">
    <label for="semm">Semester: </label>
    <select class="form-control" id="semm">
        <option>I</option>
        <option>II</option>
        <option>III</option>
        <option>IV</option>
        <option>V</option>
        <option>VI</option>
        <option>VII</option>
        <option>VIII</option>
    </select>
    <label for="branchm">Branch: </label>
    <select class="form-control" id="branchm">
        <option>CS</option>
        <option>IT</option>
        <option>ETC</option>
        <option>EI</option>
        <option>Mech</option>
        <option>Civil</option>
    </select>
    <label for="typem">Type: </label>
    <select class="form-control" id="typem">
        <option>Notes</option>
        <option>Question Papers</option>
        <option>Books</option>
        <option>Other</option>
    </select><br>
    <button type="button" class="btn btn-primary btn-md btn-block study-btn">Submit</button>
</div>
-->
<div ng-app="lh" ng-controller="myCtrl">
    <div class="form-group row desktop">
        <div class="col-md-4 col-xs-12">
            <label for="sem">Semester: </label>
            <select class="form-control" id="sem" ng-model="sem" ng-change="getResults()"> 
                    <option value="any">Any</option>
                    <option>I Year</option>
                    <option>III</option>
                    <option>IV</option>
                    <option>V</option>
                    <option>VI</option>
                    <option>VII</option>
                    <option>VIII</option>
            </select>
        </div>
        <div class="col-md-4 col-xs-12">
            <label for="branch">Branch: </label>
            <select class="form-control" id="branch" ng-model="branch" ng-change="getResults()">
                    <option value="any">Any</option>
                    <option>CS</option>
                    <option>IT</option>
                    <option>ETC</option>
                    <option>EI</option>
                    <option>Mech</option>
                    <option>Civil</option>
            </select>
        </div>
        <div class="col-md-4 col-xs-12">
            <label for="type">Type: </label>
            <select class="form-control" id="type" ng-model="type" ng-change="getResults()">
                    <option value="any">Any</option>
                    <option>Notes</option>
                    <option>Question Papers</option>
                    <option>Books</option>
                    <option>Practical</option>
                    <option>Other</option>
            </select>
        </div>
    <!--  Uncomment this if you want to play with the colours of the tiles ------

         <div class="col-md-4 col-xs-12">
           <input type="range" oninput="changed('red', this)" min="0" max="255" value="0">
        </div>
        <div class="col-md-4 col-xs-12">
                <input type="range" oninput="changed('green', this)" min="0" max="255" value="0">
        </div>
        <div class="col-md-4 col-xs-12">
                <input type="range" oninput="changed('blue', this)" min="0" max="255" value="0">
        </div>
        
        <div class="col-md-4 col-xs-12">
                <button class="btn btn-info" onclick="output()">Output RGBA</button>
        </div>
        <div class="col-md-4 col-xs-12">
                <button class="btn btn-info" onclick="toggle()">Toggle Font Color (W/B)</button>
        </div>
    </div>-->  
    <div class="row file-enc">
        <div class="col-md-3 col-xs-12 filer" ng-repeat="file in files | orderBy : intviews" class="studyFile" ng-click="redirect(file.webViewLink, file.id, file.properties.views)">
           
                <!-- <span><b>Type:</b> {{file.properties.type == "QUEST"?"Question Paper":
                    (file.properties.type == "NOTES"?"Notes":(
                        file.properties.type == "BOOKS"?"Book":(
                            file.properties.type == "PRACTICAL"?"Practical":"Other"
                        )
                    )) }}</span><br> -->
            <span><b>Semester:</b> {{file.properties.sem}}</b></span><br>
            <span><b>Subject:</b> {{file.properties.subject}}</b></span><br>
            <span><b>Year:</b> {{file.properties.year}}</b></span><br>
            <span><b>File name:</b> {{file.properties.material_name}}</span><br>
            <span><b>Midsem/Endsem :</b> {{file.properties.mst}}</span><br>
            <span><b>Uploaded By :</b> {{file.properties.uploader}}</span><br>
            
            <span><b>Views :</b> {{file.properties.views}}</b></span>
          <!-- {{file.properties}} -->
        </div>
        
    </div>
  <div class="row">
        <div class="col-6"><button ng-if="files.length > 0 && pageTokens.length !=1" class="btn btn-success" ng-click="prevPage()">Prev</button></div>
        <div class="col-6"><button ng-if="files.length > 0 && nextPageToken" class="btn btn-success" ng-click="nextPage()">Next</button></div>
  </div>
</div>

</body>

<script type="text/javascript">var _Hasync= _Hasync|| [];
_Hasync.push(['Histats.start', '1,3693901,4,0,0,0,00010000']);
_Hasync.push(['Histats.fasi', '1']);
_Hasync.push(['Histats.track_hits', '']);
(function() {
var hs = document.createElement('script'); hs.type = 'text/javascript'; hs.async = true;
hs.src = ('//s10.histats.com/js15_as.js');
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(hs);
})();</script>
<noscript><a href="/" target="_blank"><img  src="//sstatic1.histats.com/0.gif?3693901&101" alt="free counter statistics" border="0"></a></noscript>
<!-- Histats.com  END  -->

<script>
    var drive_arr = ["12JTuWJqxB4XwK-3XcSnXFYP2Zrl8SAjU", "1XROM3Wj6mHAEeLPq3aznqICfU0rpPZMY", "1AP6o61I12drcbGLIHTkogX-1T9qIMghf", "1rfBVBb-X26w4Wohdc2nj1TbWAbt_68n5", "1ZMZ9op4Q1fw2_1WMCVckqhzgRkoAgPTr", "1TKqtiaNTvOhEhTtw6_1FH3JIzqVlXiL3",
   "1Zbywe2z39Ab8wu8Rt02aoXK1jJrrQmaO","1ozwjtEAB6EosO1H5kkZhOT6jdF5te3xY", "1yJJzCbIPitG3UFLr1t1VeMiBb2NS2015", "1tY6_-K9oFfy4I_3pafvwlyzA0-LRZb1p", "1VGk1uBxuYoyy05jnwlIvwh_sJskNWBc0",
   "1vZIgq_0MthVpHbTyrV8cPAe1gKoXcSBv", "1kEGQ7NFBsbsgFV_LXVCeBBC2gWjQXtpw", "1w1eX1iWTx8RCr7XfSK51ixP4HNl29goE", "1PDpLm3Pm90txBbJL8hyF7i9m8QxVj5Vv", "1fMSz9gQHmJ_cVfcaCeWMWNw7k-L1ZnWf", "1feA5FBQsnvhwYNIch6awiGeK-ABwQc0m", "19jzGpg8aBR8xFluK-ot54hNhQSVJ2Yia"];
   var count =  17;
    $('#sem option').each((ind, elem)=>{
      if(ind!=0) 
      $(elem).attr('value',drive_arr[count--]);
    });
    $('#type option').each((ind, elem)=>{
      if(ind!=0) 
      $(elem).attr('value',drive_arr[count--]);
    });
    $('#branch option').each((ind, elem)=>{
      if(ind!=0)
      $(elem).attr('value',drive_arr[count--]);
    });


    var app = angular.module("lh", []);
    app.controller("myCtrl", function($scope, $http) {
        $scope.files = [];
        $scope.nextPageToken = false;
        $scope.pageTokens = [];
        $scope.getResults = function(){
            var sem = $scope.sem;
            var branch = $scope.branch;
            var type = $scope.type;
            $scope.pageTokens = [];
            $scope.nextPageToken = false;
            console.log(sem);
            $http.get('getResults?sem='+sem+"&branch="+branch+"&type="+type).then(function(res){            
                var files = res.data.files;
                $scope.files = files;
                if(res.data.nextPageToken) {
                    $scope.pageTokens.push(res.data.nextPageToken);
                    $scope.nextPageToken = true;
                }
                console.log(res.data);
            });
        }

        $scope.nextPage = function(){
                var sem = $scope.sem;
            var branch = $scope.branch;
            var type = $scope.type;
            var npt = $scope.pageTokens[$scope.pageTokens.length-1];
            console.log(npt);
                $http.get('getResults?sem='+sem+"&branch="+branch+"&type="+type+"&nextPageToken="+npt).then(function(res){
                    var files = res.data.files;
                    $scope.files = files;
                    console.log(res.data);  
                    if(res.data.nextPageToken==undefined){
                        $scope.nextPageToken = false;
                    }
                    else $scope.pageTokens.push(res.data.nextPageToken);
                
                });
            
        }


        $scope.prevPage = function(){
                var sem = $scope.sem;
            var branch = $scope.branch;
            var type = $scope.type;
            if($scope.nextPageToken) $scope.pageTokens.pop();
            $scope.pageTokens.pop();
            var npt = $scope.pageTokens[$scope.pageTokens.length-1];
                $http.get('getResults?sem='+sem+"&branch="+branch+"&type="+type+"&nextPageToken="+npt).then(function(res){
                    var files = res.data.files;
                    $scope.nextPageToken = true;
                    $scope.files = files;
                    console.log(res.data);  
                    $scope.pageTokens.push(res.data.nextPageToken);
                });
            
        }

        $scope.redirect = function(link, id, views){
           $http.get('updateViews?fileId='+id+'&currentViews='+views).then(function(){
               
           }).catch(function(){

           });
            window.open( link , '_blank');
         //  console.log(link, id);
        }

        $scope.intviews = function(file){
            return [-parseInt(file.properties.views)];
        }
    });


    $('.current').removeClass('current');
    $('.nav-item:nth-of-type(2)').addClass('current');
    var left = $('.current').offset().left + 10;
    var width = $('.current').width();
    $('#marker').stop().animate( {  left: left, width: width  }, 0 );
$('.nav-item').mouseover(function(){
  var left = $(this).offset().left + 10;
  var width = $(this).width();
  $('#marker').stop().animate( {  left: left, width: width  }, 500 );
});

$('.nav-item').mouseout(function(){
  var left = $('.current').offset().left + 10;
  var width = $('.current').width();
  $('#marker').stop().animate( {  left: left, width: width  }, 500 );
});

let red = 0, green =0, blue = 0;
let col = "white";

function changed(col, elem){
    console.log("CHanged");
    switch(col){
        case 'red':  red = $(elem).val(); break;
        case 'green':  green = $(elem).val();break;
        case 'blue':  blue = $(elem).val();
    }
    $('.filer').css('background', 'rgba('+red+', '+green+','+blue+',1)');
}

function output(){
    console.log(red, green, blue);
}

function toggle(){
    if(col=="white"){
        $('.filer').css('color', 'black');
        col = "black";
    }else{
        $('.filer').css('color', 'white');
        col = "white";
    }
}

</script>
</html>
